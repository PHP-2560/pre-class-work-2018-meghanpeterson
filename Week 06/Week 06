# pre-class


Make sure you commit this often with meaningful messages. 



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


1. Read the source code for each of the following three functions, puzzle out what they do, and then brainstorm better names.

```
f1 <- function(string, prefix) {
#arguments for this function are string and prfix
  substr(string, 1, nchar(prefix)) == prefix
#this function extracts substrings in a string. It starts to replace at 1 and stops when the count of the number of characters equals the number in the prefix.
#I would replace f1 with "match_prefix"

```{r}
?substr
```
  
}
f2 <- function(x) {
  if (length(x) <= 1) return(NULL)
#For this function, it removes the last value of x.
  x[-length(x)]
#I would rename this function remove_last
}
f3 <- function(x, y) {
  rep(y, length.out = length(x))
#This function takes arguments x and y. It replicates y the same number of times as the length of x. 
#I would rename this function replicatey_xtimes

```
{r}
?rep
```
}
```

2. Compare and contrast rnorm() and MASS::mvrnorm(). How could you make them more consistent?

```{r}
?rnorm
```

3. Use `lapply()` and an anonymous function to find the coefficient of variation (the standard deviation divided by the mean) for all columns in the mtcars dataset. 

4. Use vapply() to:
    a. Compute the standard deviation of every column in a numeric data frame.
    b. Compute the standard deviation of every numeric column in a mixed data frame. (Hint: youâ€™ll need to use vapply() twice.)
